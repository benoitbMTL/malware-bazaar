#!/usr/bin/env python3
import requests
from tabulate import tabulate

def fetch_recent_samples():
    url = 'https://mb-api.abuse.ch/api/v1/'
    headers = {'Content-Type': 'application/x-www-form-urlencoded'}
    data = {'query': 'get_recent', 'selector': '100'}

    try:
        response = requests.post(url, data=data, headers=headers)
        response_data = response.json()
        return response_data.get('data', [])
    except requests.exceptions.RequestException as e:
        print(f"Error fetching data from MalwareBazaar: {e}")
        return []

def display_samples_table(samples):
    headers = ["File Name", "File Type", "Signature", "Tags"]
    rows = []

    for sample in samples:
        file_name = sample.get('file_name', 'N/A')
        file_type = sample.get('file_type', 'N/A')
        signature = sample.get('signature', 'N/A')
        tags = sample.get('tags', [])
        
        # Truncate long values for display
        file_name = file_name[:30] + '...' if len(file_name) > 33 else file_name
        file_type = file_type[:12] + '...' if len(file_type) > 15 else file_type
        
        # Check if signature is None
        if signature is not None:
            signature = signature[:18] + '...' if len(signature) > 21 else signature
        else:
            signature = 'N/A'
        
        # Check if tags is not empty
        if tags:
            tags = ', '.join(tags)[:27] + '...' if len(tags) > 27 else ', '.join(tags)
        else:
            tags = 'N/A'

        rows.append([file_name, file_type, signature, tags])

    table = tabulate(rows, headers, tablefmt="grid")
    print(table)

if __name__ == "__main__":
    recent_samples = fetch_recent_samples()
    if recent_samples:
        display_samples_table(recent_samples)
    else:
        print("No recent samples found.")
